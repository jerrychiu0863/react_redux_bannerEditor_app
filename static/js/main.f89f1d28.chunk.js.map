{"version":3,"sources":["css.svg","constants/action-types.js","reducers/index.jsx","reducers/color.jsx","reducers/fontSize.jsx","reducers/colorDegree.jsx","reducers/typing.jsx","reducers/fontColor.jsx","reducers/fontFamily.jsx","reducers/colorLists.jsx","reducers/model.jsx","reducers/activeColorList.jsx","store/index.jsx","containers/View.jsx","actions/index.jsx","components/SideBarHead.jsx","static-data.js","components/Color.jsx","components/Font.jsx","components/Typing.jsx","components/SideBarFooter.jsx","containers/SideBar.jsx","components/ListItem.jsx","components/ListView.jsx","containers/ListModel.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","constants","SET_FIRST_COLOR","SET_SECOND_COLOR","SET_COLOR_DEGREE","SET_FONT_SIZE","SET_FONT_COLOR","SET_FONT_FAMILY","SET_TYPING","CLEAR_TYPING","RESET","SAVE_DESIGN","DELETE_DESIGN","SET_MODEL","ACTIVE_COLOR_LIST","DELETE_ALL","combineReducers","color","state","arguments","length","undefined","action","type","C","payload","fontSizeValue","colorDegree","typing","fontColor","fontFamily","colorLists","_action$payload","fontSize","id","date","timestamp","Object","toConsumableArray","concat","isActive","colorId","map","s","objectSpread","filter","isModelOpen","activeColorList","colorList","store","createStore","reducer","View","getState","h1Style","backgroundImage","height","textAlign","overflow","react_default","a","createElement","className","style","setModel","SideBarHead","_ref","onClick","dispatch","fontSizes","colorDegrees","fontFamilies","prefixConstants","Color","firstColor","secondColor","value","onChange","e","target","c","key","Font","fontColorValue","fontFamilyValue","f","Typing","SideBarFooter","cuid","Date","toString","saveDesign","year","getFullYear","month","getMonth","day","getDate","getDay","SideBar","src_components_SideBarHead","src_components_Color","src_components_Font","src_components_Typing","src_components_SideBarFooter","ListItem","bg","onActiveColorList","onDeleteDesign","ColorId","console","log","ListView","bgColor","fontStyle","ListModel","onDeleteAllDesign","getClassName","src_components_ListItem","list","keys","src","cssLogo","alt","href","title","src_components_ListView","renderListView","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","src_containers_View","containers_SideBar","src_containers_ListModel","Component","Boolean","window","location","hostname","match","render","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","subscribe"],"mappings":"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","file":"static/js/main.f89f1d28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/css.9c9c21e8.svg\";","const constants = {\r\n    SET_FIRST_COLOR: \"SET_FIRST_COLOR\",\r\n    SET_SECOND_COLOR: \"SET_SECOND_COLOR\",\r\n    SET_COLOR_DEGREE: \"SET_COLOR_DEGREE\",\r\n    SET_FONT_SIZE: \"SET_FONT_SIZE\",\r\n    SET_FONT_COLOR: \"SET_FONT_COLOR\",\r\n    SET_FONT_FAMILY: \"SET_FONT_FAMILY\",\r\n    SET_TYPING: \" SET_TYPING\",\r\n    CLEAR_TYPING: \"CLEAR_TYPING\",\r\n    RESET: \"RESET\",\r\n    SAVE_DESIGN: \"SAVE_DESIGN\",\r\n    DELETE_DESIGN: \" DELETE_DESIGN\",\r\n    SET_MODEL: \"SET_MODEL\",\r\n    ACTIVE_COLOR_LIST: \"ACTIVE_COLOR_LIST\",\r\n    DELETE_ALL: \"DELETE_ALL\"\r\n}\r\n\r\nexport default constants;\r\n","import color from './color';\r\nimport fontSize from './fontSize';\r\nimport colorDegree from './colorDegree';\r\nimport typing from './typing';\r\nimport fontColor from './fontColor';\r\nimport fontFamily from './fontFamily';\r\nimport colorLists from './colorLists';\r\nimport isModelOpen from './model';\r\nimport activeColorList from './activeColorList';\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n    color,\r\n    fontSizeValue: fontSize,\r\n    colorDegree,\r\n    typing,\r\n    fontColor,\r\n    fontFamily,\r\n    colorLists,\r\n    isModelOpen,\r\n    activeColorList\r\n});","import C from '../constants/action-types';\r\n\r\nexport default function color(state=[\"#005aa7\", \"#fffde4\"], action) {\r\n    switch(action.type) {\r\n        case C.SET_FIRST_COLOR:\r\n            return [action.payload, state[1]];\r\n        \r\n        case C.SET_SECOND_COLOR:\r\n            return [state[0], action.payload]\r\n            \r\n        case C.RESET:\r\n            return [\"#005aa7\", \"#fffde4\"]\r\n            \r\n        default: \r\n            return state;\r\n    }\r\n}","import C from '../constants/action-types';\r\n\r\nexport default function fontSize(state='8', action) {\r\n    switch(action.type) {\r\n        case C.SET_FONT_SIZE:\r\n            return action.payload\r\n            \r\n        case C.RESET:\r\n            return '8'\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n} ","import C from '../constants/action-types';\r\n\r\nexport default function colorDegree(state='0', action) {\r\n    switch(action.type) {\r\n        case C.SET_COLOR_DEGREE:\r\n            return action.payload\r\n            \r\n        case C.RESET:\r\n            return '0'\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","import C from '../constants/action-types';\r\n\r\nexport default function typing(state='Hello World!', action) {\r\n    switch(action.type) {\r\n        case C.SET_TYPING:\r\n            return action.payload\r\n            \r\n        case C.CLEAR_TYPING:\r\n            return ''\r\n            \r\n        case C.RESET:\r\n            return 'Hello World!'\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import C from '../constants/action-types';\r\n\r\nexport default function fontColor(state='#000000', action) {\r\n    switch(action.type) {\r\n        case C.SET_FONT_COLOR:\r\n            return action.payload\r\n            \r\n        case C.RESET:\r\n            return \"#000000\"\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","import C from '../constants/action-types';\r\n\r\nexport default function fontFamil(state='Lato', action) {\r\n    switch(action.type) {\r\n        case C.SET_FONT_FAMILY:\r\n            return action.payload\r\n            \r\n        case C.RESET:\r\n            return 'Lato'\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","import C from '../constants/action-types';\r\n\r\nexport default function colorLists(state=[], action) {\r\n    switch(action.type) {\r\n        case C.SAVE_DESIGN:\r\n            const {color, colorDegree, fontFamily, fontSize, fontColor, typing, id, date, timestamp} = action.payload;\r\n            \r\n            return [...state, {color, colorDegree, fontFamily, fontSize, fontColor, typing, id, date, timestamp, isActive: false}]\r\n            \r\n        case C.ACTIVE_COLOR_LIST:\r\n            const { colorId } = action.payload;\r\n            return state.map( s => (\r\n                s.id !== colorId ? {...s, isActive: false} : {...s, isActive: true}))\r\n            \r\n        case C.DELETE_DESIGN:\r\n            const updatedLists = state.filter(s => s.id !== action.payload);\r\n            return updatedLists\r\n            \r\n        case C.DELETE_ALL:\r\n            return []\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","import C from '../constants/action-types';\r\n\r\nexport default function isModelOpen(state=false, action) {\r\n    switch(action.type) {\r\n        case C.SET_MODEL:\r\n            return !state\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","import C from '../constants/action-types';\r\n\r\nexport default function activeColorList(state={}, action) {\r\n    switch(action.type) {\r\n        case C.ACTIVE_COLOR_LIST:\r\n            const { colorList } = action.payload;\r\n            return colorList\r\n            \r\n        default: \r\n            return state\r\n    }\r\n}","import { createStore } from 'redux';\r\nimport reducer from '../reducers';\r\n\r\nconst store = createStore(reducer);\r\nexport default store;","import React from 'react';\r\n\r\nimport store from '../store';\r\nimport './View.css';\r\n\r\nconst View = () => {\r\n    \r\n    const state = store.getState();\r\n    const { color, fontSizeValue, colorDegree, typing, fontColor, fontFamily } = state;\r\n    \r\n    const h1Style = {\r\n          fontSize: `${fontSizeValue}px`,\r\n          backgroundImage: `linear-gradient(-${colorDegree}deg, ${color[0]}, ${color[1]})`,\r\n          height: \"500px\",\r\n          textAlign: \"center\",\r\n          color: `${fontColor}`,\r\n          fontFamily: `${fontFamily}`,\r\n          overflow: \"auto\"\r\n    }\r\n    \r\n    return(\r\n        <div className=\"View\">\r\n           \r\n            <div className=\"View__header\">\r\n                <p>Canvas</p>\r\n            </div>\r\n             <h1 style={h1Style}>{typing}</h1>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default View;\r\n\r\n\r\n      ","import C from '../constants/action-types';\r\nimport cuid from 'cuid';\r\n\r\nexport const setFirstColor = value => ({\r\n    type: C.SET_FIRST_COLOR,\r\n    payload: value\r\n})\r\n\r\nexport const setSecondColor = value => ({\r\n    type: C.SET_SECOND_COLOR,\r\n    payload: value\r\n})\r\n\r\nexport const setColorDegree = value => ({\r\n    type: C.SET_COLOR_DEGREE,\r\n    payload: value\r\n})\r\n\r\nexport const setFontSize = value => ({\r\n    type: C.SET_FONT_SIZE,\r\n    payload: value\r\n})\r\n\r\nexport const setFontFamily = value => ({\r\n    type: C.SET_FONT_FAMILY,\r\n    payload: value\r\n})\r\n\r\nexport const setTyping = value => ({\r\n    type: C.SET_TYPING,\r\n    payload: value\r\n})\r\n\r\nexport const setFontColor = value => ({\r\n    type: C.SET_FONT_COLOR,\r\n    payload: value\r\n})\r\n\r\nexport const clearTyping = () => ({\r\n    type: C.CLEAR_TYPING,\r\n    payload: ''\r\n})\r\n\r\nexport const saveDesign = (color, colorDegree, fontFamily, fontSize, fontColor, typing, date) => ({\r\n    type: C.SAVE_DESIGN,\r\n    payload: {\r\n        color,\r\n        colorDegree,\r\n        fontFamily,\r\n        fontSize,\r\n        fontColor,\r\n        typing,\r\n        date,\r\n        id: cuid(),\r\n        timestamp: new Date().toString()\r\n    }\r\n})\r\n\r\nexport const deleteDesign = ColorId => ({\r\n    type: C.DELETE_DESIGN,\r\n    payload: ColorId\r\n})\r\n\r\nexport const resetDesign = () => ({\r\n    type: C.RESET,\r\n    payload: ''\r\n})\r\n\r\nexport const setModel = () => ({\r\n    type: C.SET_MODEL,\r\n    payload: ''\r\n})\r\n\r\nexport const activeColorList = (colorList, colorId) => ({\r\n    type: C.ACTIVE_COLOR_LIST,\r\n    payload: {\r\n        colorList,\r\n        colorId\r\n    }\r\n})\r\n\r\nexport const deleteAllDesign = () => ({\r\n    type: C.DELETE_ALL,\r\n    payload: ''\r\n})","import React from 'react';\r\nimport { setModel } from '../actions';\r\nimport store from '../store';\r\nimport './SideBarHead.css';\r\n\r\nconst SideBarHead = ({colorLists}) => {\r\n\r\n    const openModel = () => {\r\n        store.dispatch(setModel());\r\n    }\r\n    \r\n    return(\r\n        <div className=\"SideBarHead\">\r\n            <button onClick={() => openModel()} className=\"SideBarHead__btn\"><i className={colorLists.length !== 0 ? \"fas fa-bookmark icon__active\" : \"fas fa-bookmark\"}></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBarHead;","export const fontSizes = [8, 10, 12, 14, 16, 18, 20, 22, 26, 32, 36, 42, 48, 54];\r\n\r\nexport const colorDegrees = [0, 45, 90, 135, 180];\r\n\r\nexport const fontFamilies = [\"Lato\", \"Playfair Display\", \"Roboto\", \"Roboto Slab\" ];\r\n\r\nexport const prefixConstants = [\" \", \"-o-\", \"-ms-\", \"-moz-\", \"-webkit-\"];","import React from 'react';\r\n\r\nimport { colorDegrees } from '../static-data';\r\nimport store from '../store';\r\nimport { setFirstColor, setSecondColor, setColorDegree } from '../actions';\r\nimport './Color.css';\r\n\r\nconst Color = ({firstColor, secondColor, colorDegree}) => {\r\n    \r\n    const setFirstColorValue = (e) => {\r\n     store.dispatch(setFirstColor(e.target.value))\r\n     \r\n    }\r\n    \r\n    const setSecondColorValue = (e) => {\r\n     store.dispatch(setSecondColor(e.target.value))\r\n      \r\n    }\r\n    \r\n    const setColorDegreeValue = e => {\r\n       store.dispatch(setColorDegree(e.target.value))\r\n    }\r\n    \r\n    return(\r\n        <div className=\"Color\">\r\n          \r\n           <div className=\"Color__header\">\r\n               <p>Color</p>\r\n           </div>\r\n           <div>\r\n               <p className=\"Color__label\">Color:<input type=\"color\" value={firstColor} onChange={setFirstColorValue} />\r\n                <input type=\"color\" value={secondColor} onChange={setSecondColorValue}/> \r\n               </p>\r\n           </div>\r\n           <div>\r\n                <p className=\"Color__label\">Degree:<select value={colorDegree} onChange={setColorDegreeValue}>\r\n                {colorDegrees.map( c => <option key={c} value={c}>{c}</option>)}\r\n                </select>\r\n                </p>\r\n           </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Color;","import React from 'react';\r\n\r\nimport store from '../store';\r\nimport { setFontSize, setFontColor, setFontFamily } from '../actions';\r\nimport { fontSizes, fontFamilies } from '../static-data';\r\nimport './Font.css';\r\n\r\nconst Font = ({fontSizeValue, fontColorValue, fontFamilyValue}) => {\r\n    \r\n    const setFontSizeValue = (e) => {\r\n        store.dispatch(setFontSize(e.target.value));\r\n     \r\n    }\r\n    \r\n    const setFontColorValue = e => {\r\n        store.dispatch(setFontColor(e.target.value));\r\n    }\r\n    \r\n    const setFontFamilyValue = e => {\r\n        store.dispatch(setFontFamily(e.target.value))\r\n    }\r\n    \r\n    return(\r\n        <div className=\"Font\">\r\n          \r\n           <div className=\"Font__header\">\r\n               <p>Font</p>\r\n           </div>\r\n           <div>\r\n               <p className=\"Font__label\">Font: \r\n                  <select \r\n                      onChange={setFontFamilyValue} value={fontFamilyValue}>\r\n                      {fontFamilies.map( f => <option key={f} value={f}>{f}</option>)}\r\n                  </select>\r\n              </p>\r\n           </div>\r\n           <div>\r\n               <p className=\"Font__label\">Size: \r\n                  <select \r\n                      onChange={setFontSizeValue} \r\n                      value={fontSizeValue}\r\n                   >\r\n                     {fontSizes.map( f => <option key={f} value={f}>{f}</option>)}\r\n                  </select>\r\n              </p>\r\n           </div>\r\n           <div>\r\n               <p className=\"Font__label\">Color:  \r\n                   <input \r\n                       type=\"color\" \r\n                       onChange={setFontColorValue} value={fontColorValue} \r\n                   />\r\n              </p>\r\n           </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Font;","import React from 'react';\r\n\r\nimport { setTyping, clearTyping } from '../actions';\r\nimport store from '../store';\r\nimport './Typing.css';\r\n\r\nconst Typing = ({value}) => {\r\n    \r\n    const setTypingValue = e => {\r\n        store.dispatch(setTyping(e.target.value))\r\n    }\r\n    \r\n    const clearTypingValue = () => {\r\n        store.dispatch(clearTyping());\r\n    }\r\n    \r\n    return(\r\n        <div className=\"Typing\">\r\n            <div className=\"Typing__header\">\r\n               <p>Text</p>\r\n            </div>\r\n            <textarea type=\"text\" value={value} onChange={setTypingValue}></textarea>\r\n            <div>\r\n                <button \r\n                    onClick={clearTypingValue}\r\n                    className=\"btn btn-outline-secondary btn-sm Typing__clearBtn\"\r\n                >\r\n                    Clear Text\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Typing;","import React from 'react';\r\nimport store from '../store';\r\nimport { resetDesign, saveDesign } from '../actions';\r\n\r\nimport './SideBarFooter.css';\r\n\r\nconst SideBarFooter = () => {\r\n    \r\n    const state = store.getState();\r\n    const {fontSizeValue, color, colorDegree, typing, fontColor, fontFamily} = state;\r\n    \r\n    const getDate = () => {\r\n          const date = new Date();\r\n          const year = date.getFullYear();\r\n          const monthNames = [\r\n                                \"Jan.\", \"Feb.\", \r\n                                \"Mar.\", \r\n                                \"Apr.\", \r\n                                \"May\", \r\n                                \"June\",\r\n                                \"July\", \r\n                                \"Aug.\", \"Sept.\", \"Oct.\", \"Nov.\", \"Dec.\"\r\n                            ];\r\n          \r\n           const getDay = () => {\r\n               const day = date.getDate();\r\n               \r\n               if(day < 10) {\r\n               return `0${day}`\r\n                } else {\r\n               return day\r\n                }\r\n           }\r\n           \r\n          return { \r\n                  month: `${monthNames[date.getMonth()]}`,\r\n                  day: getDay(), \r\n                  year: `${year}`\r\n                 }\r\n    }\r\n    \r\n    const reset = () => {\r\n        store.dispatch(resetDesign());\r\n    }\r\n    \r\n    const onSaveDesign = () => {\r\n        store.dispatch(saveDesign(color, colorDegree, fontFamily, fontSizeValue, fontColor, typing, getDate()));\r\n    }\r\n    \r\n    return(\r\n         <div className=\"SideBarFooter\">\r\n           <button onClick={onSaveDesign} className=\"btn btn-primary btn-sm mr-2\">SAVE</button>\r\n           <button onClick={reset} className=\"btn btn-outline-primary btn-sm\">RESET</button> \r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default SideBarFooter;","import React from 'react';\r\nimport SideBarHead from '../components/SideBarHead';\r\nimport Color from '../components/Color';\r\nimport Font from '../components/Font';\r\nimport Typing from '../components/Typing';\r\nimport SideBarFooter from '../components/SideBarFooter';\r\n\r\n\r\nimport store from '../store';\r\n\r\nconst SideBar = () => {\r\n    \r\n    const state = store.getState();\r\n    const {fontSizeValue, color, colorDegree, typing, fontColor, fontFamily, colorLists} = state;\r\n        \r\n    return(\r\n        <div>\r\n           \r\n            <SideBarHead colorLists={colorLists} />\r\n            <Color firstColor={color[0]} secondColor={color[1]} colorDegree={colorDegree} />\r\n            <Font fontSizeValue={fontSizeValue} fontColorValue={fontColor} fontFamilyValue={fontFamily} />\r\n            <Typing value={typing} />\r\n            <SideBarFooter />\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;","import React from 'react';\r\nimport './ListItem.css';\r\nimport store from '../store';\r\nimport { activeColorList, deleteDesign } from '../actions';\r\n\r\nconst ListItem = ({colorList, isActive}) => {\r\n    \r\n    const bg = {\r\n        backgroundImage: `linear-gradient(-${colorList.colorDegree}deg, ${colorList.color[0]}, ${colorList.color[1]})`\r\n    }\r\n    \r\n    const onActiveColorList = () => {\r\n        store.dispatch(activeColorList(colorList, colorList.id));\r\n    }\r\n    \r\n    const onDeleteDesign = id => {\r\n        store.dispatch(deleteDesign(id))\r\n        console.log(id);\r\n    }\r\n    \r\n    return(\r\n        <div className={isActive ? \"ListItem ListItem__active\" : \"ListItem\"} onClick={() => onActiveColorList(colorList, colorList.id)}>\r\n            <div className=\"ListItem__left\">\r\n               <div className=\"ListItem__date\">\r\n                   <span className=\"ListItem__date--month\">{colorList.date.month}</span>\r\n                   <span className=\"ListItem__date--day\">{colorList.date.day}</span>\r\n               </div>\r\n                \r\n                <p className=\"ListItem__date--year\">{colorList.date.year}</p>\r\n            </div>\r\n            <div className=\"ListItem__right\" style={bg}>\r\n                <span className=\"ListItem__colorInfo\">{colorList.color[0]} &rarr; {colorList.color[1]}</span>\r\n            </div>\r\n            <button onClick={() => onDeleteDesign(colorList.id)} className=\"ListItem__deleteBtn btn btn-light\">Delete</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport './ListView.css';\r\nimport { prefixConstants } from '../static-data';\r\n\r\nconst ListView = ({colorList}) => {\r\n    const bgColor = {\r\n        backgroundImage: `linear-gradient(-${colorList.colorDegree}deg, ${colorList.color[0]}, ${colorList.color[1]})`\r\n    }\r\n\r\n    const fontStyle = {\r\n        fontSize: `${colorList.fontSize}`,\r\n        fontFamily: `${colorList.fontFamily}`,\r\n        color: `${colorList.fontColor}`\r\n    }\r\n    \r\n    return (\r\n        <div className=\"ListView\">\r\n           <div style={bgColor} className=\"ListView__top\">\r\n               <p style={fontStyle}>{colorList.typing}</p>\r\n           </div>\r\n           <div className=\"ListView__bottom\">\r\n             <div>\r\n                 <p className=\"ListView__info--title\">Background Code:</p>\r\n                 {prefixConstants.map( p => <p key={p} className=\"ListView__info--content\">background-image:  {p}linear-gradient(-{colorList.colorDegree}deg, {colorList.color[0]}, {colorList.color[1]})</p>)}\r\n             \r\n                 <p className=\"ListView__info--content  mb-2\">filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='{colorList.color[0]}', endColorstr='{colorList.color[1]}',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */</p>\r\n             </div>\r\n             <div>\r\n                 <p className=\"ListView__info--title\">Font Code:</p>\r\n                 <p className=\"ListView__info--content\">font-size: {colorList.fontSize}</p>\r\n                 <p className=\"ListView__info--content\"> font-family: {colorList.fontFamily}</p>\r\n                 <p className=\"ListView__info--content\">color: {colorList.fontColor}</p>\r\n             </div> \r\n                            \r\n           </div>\r\n        </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default ListView;","import React from 'react';\r\nimport ListItem from '../components/ListItem';\r\nimport ListView from '../components/ListView';\r\nimport store from '../store';\r\nimport { setModel, deleteAllDesign } from '../actions';\r\n\r\nimport cssLogo from '../css.svg'\r\nimport './ListModel.css';\r\n\r\nconst ListModel = () => {\r\n    const state = store.getState();\r\n    const { colorLists, activeColorList, isModelOpen } = state;\r\n        \r\n    const getClassName = value => {\r\n        let className = \"ListModel \"\r\n        \r\n        if(value) {\r\n            className += \"active\"\r\n        } else {\r\n            return className\r\n        }\r\n        \r\n        return className;   \r\n    }\r\n    \r\n    const closeModel = () => {\r\n        store.dispatch(setModel());\r\n    }\r\n    \r\n    const renderListView = list => {\r\n        const { colorLists } = state;\r\n        \r\n        if(Object.keys(list).length === 0 ||  colorLists.length === 0) {\r\n            return <div className=\"ListModel__empty\"><img src={cssLogo} alt=\"img\" className=\"ListModel__empty--img\" /><p>Please Click The Design On The Left To Generate CSS Code!</p>\r\n            <div className=\"ListModel__empty--author\">Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\">CC 3.0 BY</a></div>\r\n            </div>\r\n        } else {\r\n            return <ListView colorList={list} />\r\n        }\r\n    }\r\n    \r\n    const onDeleteAllDesign = () => {\r\n        store.dispatch(deleteAllDesign());\r\n    }\r\n    \r\n    return(\r\n        <div className={getClassName(isModelOpen)}>\r\n            <div className=\"ListModel__content\">\r\n                <div className=\"ListModel__content--left\">\r\n                      {colorLists.map( c => <ListItem colorList={c} key={c.id} isActive={c.isActive} />)}\r\n                      {colorLists.length !== 0 ? <button onClick={() => onDeleteAllDesign()} className=\"btn btn-secondary btn-sm mt-2 deleteAllBtn\">Delete All</button> : null}\r\n                </div>\r\n            <div className=\"ListModel__content--right\">\r\n                {renderListView(activeColorList)}\r\n            </div>\r\n             <button onClick={() => closeModel()} className=\"ListModel__btn\">X</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListModel;","import React, { Component } from 'react';\nimport store from './store';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport View from './containers/View';\nimport SideBar from './containers/SideBar';\nimport ListModel from './containers/ListModel';\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n       \n      }\n  }\n    \n\n    \n  render() {\n    const state = store.getState();\n    const { isModelOpen } = state;\n    console.log(state);\n    console.log(isModelOpen);\n    return (\n      <div className=\"App\">\n       \n        <View />\n        <SideBar />\n        <ListModel />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nconst render = () => ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\nrender();\nstore.subscribe(render);\n"],"sourceRoot":""}